{"version":3,"sources":["../src/CopyToClipboard.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAM,UAAU,SAAV,OAAU,CAAC,IAAD,EAAO,MAAP;SAAkB,YAAM;AACtC,mCAAK,IAAL,EADsC;AAEtC,QAAI,MAAJ,EAAY;AACV,aAAO,IAAP,EADU;KAAZ;GAFgC;CAAlB;;AAOhB,IAAM,kBAAkB,gBAAM,WAAN,CAAkB;;;AACxC,aAAW;AACT,UAAM,gBAAM,SAAN,CAAgB,MAAhB,CAAuB,UAAvB;AACN,cAAU,gBAAM,SAAN,CAAgB,OAAhB,CAAwB,UAAxB;AACV,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;GAHV;;AAOA,4BAAS;iBACoC,KAAK,KAAL,CADpC;QACA,mBADA;QACM,uBADN;QACc,2BADd;;QAC2B,yEAD3B;;AAEP,QAAM,OAAO,gBAAM,QAAN,CAAe,IAAf,CAAoB,QAApB,CAAP,CAFC;;AAIP,WAAO,gBAAM,YAAN,CAAmB,IAAnB,eACF;AACH,eAAS,QAAQ,IAAR,EAAc,MAAd,CAAT;MAFK,CAAP,CAJO;GAR+B;CAAlB,CAAlB;;kBAoBS","file":"CopyToClipboard.js","sourcesContent":["import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nconst onClick = (text, onCopy) => () => {\n  copy(text);\n  if (onCopy) {\n    onCopy(text);\n  }\n};\n\nconst CopyToClipboard = React.createClass({\n  propTypes: {\n    text: React.PropTypes.string.isRequired,\n    children: React.PropTypes.element.isRequired,\n    onCopy: React.PropTypes.func\n  },\n\n\n  render() {\n    const {text, onCopy, children, ...props} = this.props;\n    const elem = React.Children.only(children);\n\n    return React.cloneElement(elem, {\n      ...props,\n      onClick: onClick(text, onCopy)\n    });\n  }\n});\n\n\nexport default CopyToClipboard;\n"]}